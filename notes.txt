The logic is to build a flexible bot that will be able to scale given different circumstances. In order to do that
we need consider other 


# Implement: 
	- A class(es) that calculates the tendency to either attack or defend.
    - A set of testing environments to see how the algorithm would react:
        run a series of command on all of the ships and shipayrd to make them
        orient in a certain way.
	- A class that predict the most possible move by the near by ship:
		- Check the ship's N,S,W,E and choose the one the most number of halites
		and if the cargo was more than mine then go and vice-versa
	
	- Include more variables in ShipTendency and evaluate the rank relative to other ships as well,
		generally complicate the object more than ever then balance with DecisionShip.
	
	- **Stimulator: Given that I fail to choose solution I would randomly go ahead
		and choose an action and run the board forward each time for each of the actions
		then I would rank their outcomes and actually choose one of them.

	- Debugging: have a global string and each time when you would log sth just add to that
		string then at certain intervals output the things you want to output, or even log it to another 
		.txt file
		